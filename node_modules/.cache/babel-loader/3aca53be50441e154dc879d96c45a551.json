{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\jborn\\\\Documents\\\\GitHub\\\\NFT-pixelVizslas\\\\candy-machine-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _asyncToGenerator from\"C:\\\\Users\\\\jborn\\\\Documents\\\\GitHub\\\\NFT-pixelVizslas\\\\candy-machine-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\jborn\\\\Documents\\\\GitHub\\\\NFT-pixelVizslas\\\\candy-machine-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _taggedTemplateLiteral from\"C:\\\\Users\\\\jborn\\\\Documents\\\\GitHub\\\\NFT-pixelVizslas\\\\candy-machine-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import _regeneratorRuntime from\"C:\\\\Users\\\\jborn\\\\Documents\\\\GitHub\\\\NFT-pixelVizslas\\\\candy-machine-ui\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useCallback,useEffect,useMemo,useState}from\"react\";import*as anchor from\"@project-serum/anchor\";import styled from\"styled-components\";import{Container,Snackbar}from\"@material-ui/core\";import Paper from\"@material-ui/core/Paper\";import Alert from\"@material-ui/lab/Alert\";import Grid from\"@material-ui/core/Grid\";import Typography from\"@material-ui/core/Typography\";import{Connection,PublicKey}from\"@solana/web3.js\";import{useWallet}from\"@solana/wallet-adapter-react\";import{WalletDialogButton}from\"@solana/wallet-adapter-material-ui\";import{awaitTransactionSignatureConfirmation,CANDY_MACHINE_PROGRAM,createAccountsForMint,getCandyMachineState,getCollectionPDA,mintOneToken}from\"./candy-machine\";import{formatNumber,getAtaForMint,toDate}from\"./utils\";import{MintCountdown}from\"./MintCountdown\";import{MintButton}from\"./MintButton\";import{GatewayProvider}from\"@civic/solana-gateway-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ConnectButton=styled(WalletDialogButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 60px;\\n  margin-top: 10px;\\n  margin-bottom: 5px;\\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\\n  color: white;\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));var MintContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\"])));// add your owns styles here\nvar Home=function Home(props){var _candyMachine$state,_candyMachine$state2,_candyMachine$state2$;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isUserMinting=_useState2[0],setIsUserMinting=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),candyMachine=_useState4[0],setCandyMachine=_useState4[1];var _useState5=useState({open:false,message:\"\",severity:undefined}),_useState6=_slicedToArray(_useState5,2),alertState=_useState6[0],setAlertState=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isActive=_useState8[0],setIsActive=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),endDate=_useState10[0],setEndDate=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),itemsRemaining=_useState12[0],setItemsRemaining=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isWhitelistUser=_useState14[0],setIsWhitelistUser=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isPresale=_useState16[0],setIsPresale=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),isValidBalance=_useState18[0],setIsValidBalance=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),discountPrice=_useState20[0],setDiscountPrice=_useState20[1];var _useState21=useState(true),_useState22=_slicedToArray(_useState21,2),needTxnSplit=_useState22[0],setNeedTxnSplit=_useState22[1];var _useState23=useState(),_useState24=_slicedToArray(_useState23,2),setupTxn=_useState24[0],setSetupTxn=_useState24[1];var rpcUrl=props.rpcHost;var wallet=useWallet();var cluster=props.network;var anchorWallet=useMemo(function(){if(!wallet||!wallet.publicKey||!wallet.signAllTransactions||!wallet.signTransaction){return;}return{publicKey:wallet.publicKey,signAllTransactions:wallet.signAllTransactions,signTransaction:wallet.signTransaction};},[wallet]);var refreshCandyMachineState=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var commitment,connection,_cndy$state$endSettin,_cndy$state$endSettin2,_cndy$state$whitelist,_cndy$state$whitelist2,_cndy$state$gatekeepe,cndy,active,presale,isWLUser,userPrice,mint,token,balance,_mint,_token,_balance,valid,_balance2,_valid,limit,_yield$getCollectionP,_yield$getCollectionP2,collectionPDA,collectionPDAAccount,txnEstimate,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:commitment=_args.length>0&&_args[0]!==undefined?_args[0]:\"confirmed\";if(anchorWallet){_context.next=3;break;}return _context.abrupt(\"return\");case 3:if(!(props.error!==undefined)){_context.next=6;break;}setAlertState({open:true,message:props.error,severity:\"error\",hideDuration:null});return _context.abrupt(\"return\");case 6:connection=new Connection(props.rpcHost,commitment);if(!props.candyMachineId){_context.next=94;break;}_context.prev=8;_context.next=11;return getCandyMachineState(anchorWallet,props.candyMachineId,connection);case 11:cndy=_context.sent;console.log(\"Candy machine state: \",cndy);active=cndy!==null&&cndy!==void 0&&cndy.state.goLiveDate?(cndy===null||cndy===void 0?void 0:cndy.state.goLiveDate.toNumber())<new Date().getTime()/1000:false;presale=false;// duplication of state to make sure we have the right values!\nisWLUser=false;userPrice=cndy.state.price;// whitelist mint?\nif(!(cndy!==null&&cndy!==void 0&&cndy.state.whitelistMintSettings)){_context.next=39;break;}// is it a presale mint?\nif(cndy.state.whitelistMintSettings.presale&&(!cndy.state.goLiveDate||cndy.state.goLiveDate.toNumber()>new Date().getTime()/1000)){presale=true;}// is there a discount?\nif(cndy.state.whitelistMintSettings.discountPrice){setDiscountPrice(cndy.state.whitelistMintSettings.discountPrice);userPrice=cndy.state.whitelistMintSettings.discountPrice;}else{setDiscountPrice(undefined);// when presale=false and discountPrice=null, mint is restricted\n// to whitelist users only\nif(!cndy.state.whitelistMintSettings.presale){cndy.state.isWhitelistOnly=true;}}// retrieves the whitelist token\nmint=new anchor.web3.PublicKey(cndy.state.whitelistMintSettings.mint);_context.next=23;return getAtaForMint(mint,anchorWallet.publicKey);case 23:token=_context.sent[0];_context.prev=24;_context.next=27;return connection.getTokenAccountBalance(token);case 27:balance=_context.sent;isWLUser=parseInt(balance.value.amount)>0;// only whitelist the user if the balance > 0\nsetIsWhitelistUser(isWLUser);if(cndy.state.isWhitelistOnly){active=isWLUser&&(presale||active);}_context.next=39;break;case 33:_context.prev=33;_context.t0=_context[\"catch\"](24);setIsWhitelistUser(false);// no whitelist user, no mint\nif(cndy.state.isWhitelistOnly){active=false;}console.log(\"There was a problem fetching whitelist token balance\");console.log(_context.t0);case 39:userPrice=isWLUser?userPrice:cndy.state.price;if(!(cndy!==null&&cndy!==void 0&&cndy.state.tokenMint)){_context.next=62;break;}// retrieves the SPL token\n_mint=new anchor.web3.PublicKey(cndy.state.tokenMint);_context.next=44;return getAtaForMint(_mint,anchorWallet.publicKey);case 44:_token=_context.sent[0];_context.prev=45;_context.next=48;return connection.getTokenAccountBalance(_token);case 48:_balance=_context.sent;valid=new anchor.BN(_balance.value.amount).gte(userPrice);// only allow user to mint if token balance >  the user if the balance > 0\nsetIsValidBalance(valid);active=active&&valid;_context.next=60;break;case 54:_context.prev=54;_context.t1=_context[\"catch\"](45);setIsValidBalance(false);active=false;// no whitelist user, no mint\nconsole.log(\"There was a problem fetching SPL token balance\");console.log(_context.t1);case 60:_context.next=70;break;case 62:_context.t2=anchor.BN;_context.next=65;return connection.getBalance(anchorWallet.publicKey);case 65:_context.t3=_context.sent;_balance2=new _context.t2(_context.t3);_valid=_balance2.gte(userPrice);setIsValidBalance(_valid);active=active&&_valid;case 70:// datetime to stop the mint?\nif(cndy!==null&&cndy!==void 0&&(_cndy$state$endSettin=cndy.state.endSettings)!==null&&_cndy$state$endSettin!==void 0&&_cndy$state$endSettin.endSettingType.date){setEndDate(toDate(cndy.state.endSettings.number));if(cndy.state.endSettings.number.toNumber()<new Date().getTime()/1000){active=false;}}// amount to stop the mint?\nif(cndy!==null&&cndy!==void 0&&(_cndy$state$endSettin2=cndy.state.endSettings)!==null&&_cndy$state$endSettin2!==void 0&&_cndy$state$endSettin2.endSettingType.amount){limit=Math.min(cndy.state.endSettings.number.toNumber(),cndy.state.itemsAvailable);if(cndy.state.itemsRedeemed<limit){setItemsRemaining(limit-cndy.state.itemsRedeemed);}else{setItemsRemaining(0);cndy.state.isSoldOut=true;}}else{setItemsRemaining(cndy.state.itemsRemaining);}if(cndy.state.isSoldOut){active=false;}_context.next=75;return getCollectionPDA(props.candyMachineId);case 75:_yield$getCollectionP=_context.sent;_yield$getCollectionP2=_slicedToArray(_yield$getCollectionP,1);collectionPDA=_yield$getCollectionP2[0];_context.next=80;return connection.getAccountInfo(collectionPDA);case 80:collectionPDAAccount=_context.sent;setIsActive(cndy.state.isActive=active);setIsPresale(cndy.state.isPresale=presale);setCandyMachine(cndy);txnEstimate=892+(!!collectionPDAAccount&&cndy.state.retainAuthority?182:0)+(cndy.state.tokenMint?66:0)+(cndy.state.whitelistMintSettings?34:0)+((_cndy$state$whitelist=cndy.state.whitelistMintSettings)!==null&&_cndy$state$whitelist!==void 0&&(_cndy$state$whitelist2=_cndy$state$whitelist.mode)!==null&&_cndy$state$whitelist2!==void 0&&_cndy$state$whitelist2.burnEveryTime?34:0)+(cndy.state.gatekeeper?33:0)+((_cndy$state$gatekeepe=cndy.state.gatekeeper)!==null&&_cndy$state$gatekeepe!==void 0&&_cndy$state$gatekeepe.expireOnUse?66:0);setNeedTxnSplit(txnEstimate>1230);_context.next=92;break;case 88:_context.prev=88;_context.t4=_context[\"catch\"](8);if(_context.t4 instanceof Error){if(_context.t4.message===\"Account does not exist \".concat(props.candyMachineId)){setAlertState({open:true,message:\"Couldn't fetch candy machine state from candy machine with address: \".concat(props.candyMachineId,\", using rpc: \").concat(props.rpcHost,\"! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!\"),severity:\"error\",hideDuration:null});}else if(_context.t4.message.startsWith(\"failed to get info about account\")){setAlertState({open:true,message:\"Couldn't fetch candy machine state with rpc: \".concat(props.rpcHost,\"! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!\"),severity:\"error\",hideDuration:null});}}else{setAlertState({open:true,message:\"\".concat(_context.t4),severity:\"error\",hideDuration:null});}console.log(_context.t4);case 92:_context.next=95;break;case 94:setAlertState({open:true,message:\"Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!\",severity:\"error\",hideDuration:null});case 95:case\"end\":return _context.stop();}}},_callee,null,[[8,88],[24,33],[45,54]]);})),[anchorWallet,props.candyMachineId,props.error,props.rpcHost]);var onMint=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var beforeTransactions,afterTransactions,_setupMint,setupMint,_status,mintResult,status,metadataStatus,remaining,message,_args2=arguments;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:beforeTransactions=_args2.length>0&&_args2[0]!==undefined?_args2[0]:[];afterTransactions=_args2.length>1&&_args2[1]!==undefined?_args2[1]:[];_context2.prev=2;setIsUserMinting(true);if(!(wallet.connected&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.program&&wallet.publicKey)){_context2.next=40;break;}if(!(needTxnSplit&&setupTxn===undefined)){_context2.next=25;break;}setAlertState({open:true,message:\"Please sign account setup transaction\",severity:\"info\"});_context2.next=9;return createAccountsForMint(candyMachine,wallet.publicKey);case 9:setupMint=_context2.sent;_status={err:true};if(!setupMint.transaction){_context2.next=15;break;}_context2.next=14;return awaitTransactionSignatureConfirmation(setupMint.transaction,props.txTimeout,props.connection,true);case 14:_status=_context2.sent;case 15:if(!(_status&&!_status.err)){_context2.next=20;break;}setSetupTxn(setupMint);setAlertState({open:true,message:\"Setup transaction succeeded! Please sign minting transaction\",severity:\"info\"});_context2.next=23;break;case 20:setAlertState({open:true,message:\"Mint failed! Please try again!\",severity:\"error\"});setIsUserMinting(false);return _context2.abrupt(\"return\");case 23:_context2.next=26;break;case 25:setAlertState({open:true,message:\"Please sign minting transaction\",severity:\"info\"});case 26:_context2.next=28;return mintOneToken(candyMachine,wallet.publicKey,beforeTransactions,afterTransactions,(_setupMint=setupMint)!==null&&_setupMint!==void 0?_setupMint:setupTxn);case 28:mintResult=_context2.sent;status={err:true};metadataStatus=null;if(!mintResult){_context2.next=39;break;}_context2.next=34;return awaitTransactionSignatureConfirmation(mintResult.mintTxId,props.txTimeout,props.connection,true);case 34:status=_context2.sent;_context2.next=37;return candyMachine.program.provider.connection.getAccountInfo(mintResult.metadataKey,\"processed\");case 37:metadataStatus=_context2.sent;console.log(\"Metadata status: \",!!metadataStatus);case 39:if(status&&!status.err&&metadataStatus){// manual update since the refresh might not detect\n// the change immediately\nremaining=itemsRemaining-1;setItemsRemaining(remaining);setIsActive(candyMachine.state.isActive=remaining>0);candyMachine.state.isSoldOut=remaining===0;setSetupTxn(undefined);setAlertState({open:true,message:\"Congratulations! Mint succeeded!\",severity:\"success\",hideDuration:7000});refreshCandyMachineState(\"processed\");}else if(status&&!status.err){setAlertState({open:true,message:\"Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.\",severity:\"error\",hideDuration:8000});refreshCandyMachineState();}else{setAlertState({open:true,message:\"Mint failed! Please try again!\",severity:\"error\"});refreshCandyMachineState();}case 40:_context2.next=48;break;case 42:_context2.prev=42;_context2.t0=_context2[\"catch\"](2);message=_context2.t0.msg||\"Minting failed! Please try again!\";if(!_context2.t0.msg){if(!_context2.t0.message){message=\"Transaction timeout! Please try again.\";}else if(_context2.t0.message.indexOf(\"0x137\")){console.log(_context2.t0);message=\"SOLD OUT!\";}else if(_context2.t0.message.indexOf(\"0x135\")){message=\"Insufficient funds to mint. Please fund your wallet.\";}}else{if(_context2.t0.code===311){console.log(_context2.t0);message=\"SOLD OUT!\";window.location.reload();}else if(_context2.t0.code===312){message=\"Minting period hasn't started yet.\";}}setAlertState({open:true,message:message,severity:\"error\"});// updates the candy machine state to reflect the latest\n// information on chain\nrefreshCandyMachineState();case 48:_context2.prev=48;setIsUserMinting(false);return _context2.finish(48);case 51:case\"end\":return _context2.stop();}}},_callee2,null,[[2,42,48,51]]);}));return function onMint(){return _ref2.apply(this,arguments);};}();var toggleMintButton=function toggleMintButton(){var active=!isActive||isPresale;if(active){if(candyMachine.state.isWhitelistOnly&&!isWhitelistUser){active=false;}if(endDate&&Date.now()>=endDate.getTime()){active=false;}}if(isPresale&&candyMachine.state.goLiveDate&&candyMachine.state.goLiveDate.toNumber()<=new Date().getTime()/1000){setIsPresale(candyMachine.state.isPresale=false);}setIsActive(candyMachine.state.isActive=active);};useEffect(function(){refreshCandyMachineState();},[anchorWallet,props.candyMachineId,props.connection,refreshCandyMachineState]);useEffect(function(){(function loop(){setTimeout(function(){refreshCandyMachineState();loop();},20000);})();},[refreshCandyMachineState]);return/*#__PURE__*/_jsxs(Container,{style:{marginTop:100},children:[/*#__PURE__*/_jsx(Container,{maxWidth:\"xs\",style:{position:\"relative\"},children:/*#__PURE__*/_jsxs(Paper,{style:{padding:24,paddingBottom:10,backgroundColor:\"#151A1F\",borderRadius:6},children:[!wallet.connected?/*#__PURE__*/_jsx(ConnectButton,{children:\"Connect Wallet\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[candyMachine&&/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"center\",wrap:\"nowrap\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Remaining\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textPrimary\",style:{fontWeight:\"bold\"},children:\"\".concat(itemsRemaining)})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:isWhitelistUser&&discountPrice?\"Discount Price\":\"Price\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textPrimary\",style:{fontWeight:\"bold\"},children:isWhitelistUser&&discountPrice?\"\\u25CE \".concat(formatNumber.asNumber(discountPrice)):\"\\u25CE \".concat(formatNumber.asNumber(candyMachine.state.price))})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:5,children:isActive&&endDate&&Date.now()<endDate.getTime()?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MintCountdown,{date:getCountdownDate(candyMachine),style:{justifyContent:\"flex-end\"},status:\"COMPLETED\",onComplete:toggleMintButton},\"endSettings\"),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",align:\"center\",display:\"block\",style:{fontWeight:\"bold\"},children:\"TO END OF MINT\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MintCountdown,{date:getCountdownDate(candyMachine),style:{justifyContent:\"flex-end\"},status:candyMachine!==null&&candyMachine!==void 0&&(_candyMachine$state=candyMachine.state)!==null&&_candyMachine$state!==void 0&&_candyMachine$state.isSoldOut||endDate&&Date.now()>endDate.getTime()?\"COMPLETED\":isPresale?\"PRESALE\":\"LIVE\",onComplete:toggleMintButton},\"goLive\"),isPresale&&candyMachine.state.goLiveDate&&candyMachine.state.goLiveDate.toNumber()>new Date().getTime()/1000&&/*#__PURE__*/_jsx(Typography,{variant:\"caption\",align:\"center\",display:\"block\",style:{fontWeight:\"bold\"},children:\"UNTIL PUBLIC MINT\"})]})})]}),/*#__PURE__*/_jsx(MintContainer,{children:candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.isActive&&candyMachine!==null&&candyMachine!==void 0&&candyMachine.state.gatekeeper&&wallet.publicKey&&wallet.signTransaction?/*#__PURE__*/_jsx(GatewayProvider,{wallet:{publicKey:wallet.publicKey||new PublicKey(CANDY_MACHINE_PROGRAM),//@ts-ignore\nsignTransaction:wallet.signTransaction},gatekeeperNetwork:candyMachine===null||candyMachine===void 0?void 0:(_candyMachine$state2=candyMachine.state)===null||_candyMachine$state2===void 0?void 0:(_candyMachine$state2$=_candyMachine$state2.gatekeeper)===null||_candyMachine$state2$===void 0?void 0:_candyMachine$state2$.gatekeeperNetwork,clusterUrl:rpcUrl,cluster:cluster,options:{autoShowModal:false},children:/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,setIsMinting:function setIsMinting(val){return setIsUserMinting(val);},onMint:onMint,isActive:isActive||isPresale&&isWhitelistUser&&isValidBalance})}):/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,setIsMinting:function setIsMinting(val){return setIsUserMinting(val);},onMint:onMint,isActive:isActive||isPresale&&isWhitelistUser&&isValidBalance})})]}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",align:\"center\",display:\"block\",style:{marginTop:7,color:\"grey\"},children:\"Powered by METAPLEX\"})]})}),/*#__PURE__*/_jsx(Snackbar,{open:alertState.open,autoHideDuration:alertState.hideDuration===undefined?6000:alertState.hideDuration,onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},children:/*#__PURE__*/_jsx(Alert,{onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},severity:alertState.severity,children:alertState.message})})]});};var getCountdownDate=function getCountdownDate(candyMachine){var _candyMachine$state$e;if(candyMachine.state.isActive&&(_candyMachine$state$e=candyMachine.state.endSettings)!==null&&_candyMachine$state$e!==void 0&&_candyMachine$state$e.endSettingType.date){return toDate(candyMachine.state.endSettings.number);}return toDate(candyMachine.state.goLiveDate?candyMachine.state.goLiveDate:candyMachine.state.isPresale?new anchor.BN(new Date().getTime()/1000):undefined);};export default Home;","map":{"version":3,"names":["useCallback","useEffect","useMemo","useState","anchor","styled","Container","Snackbar","Paper","Alert","Grid","Typography","Connection","PublicKey","useWallet","WalletDialogButton","awaitTransactionSignatureConfirmation","CANDY_MACHINE_PROGRAM","createAccountsForMint","getCandyMachineState","getCollectionPDA","mintOneToken","formatNumber","getAtaForMint","toDate","MintCountdown","MintButton","GatewayProvider","ConnectButton","MintContainer","div","Home","props","isUserMinting","setIsUserMinting","candyMachine","setCandyMachine","open","message","severity","undefined","alertState","setAlertState","isActive","setIsActive","endDate","setEndDate","itemsRemaining","setItemsRemaining","isWhitelistUser","setIsWhitelistUser","isPresale","setIsPresale","isValidBalance","setIsValidBalance","discountPrice","setDiscountPrice","needTxnSplit","setNeedTxnSplit","setupTxn","setSetupTxn","rpcUrl","rpcHost","wallet","cluster","network","anchorWallet","publicKey","signAllTransactions","signTransaction","refreshCandyMachineState","commitment","error","hideDuration","connection","candyMachineId","cndy","console","log","active","state","goLiveDate","toNumber","Date","getTime","presale","isWLUser","userPrice","price","whitelistMintSettings","isWhitelistOnly","mint","web3","token","getTokenAccountBalance","balance","parseInt","value","amount","tokenMint","valid","BN","gte","getBalance","endSettings","endSettingType","date","number","limit","Math","min","itemsAvailable","itemsRedeemed","isSoldOut","collectionPDA","getAccountInfo","collectionPDAAccount","txnEstimate","retainAuthority","mode","burnEveryTime","gatekeeper","expireOnUse","Error","startsWith","onMint","beforeTransactions","afterTransactions","connected","program","setupMint","status","err","transaction","txTimeout","mintResult","metadataStatus","mintTxId","provider","metadataKey","remaining","msg","indexOf","code","window","location","reload","toggleMintButton","now","loop","setTimeout","marginTop","position","padding","paddingBottom","backgroundColor","borderRadius","fontWeight","asNumber","getCountdownDate","justifyContent","gatekeeperNetwork","autoShowModal","val","color"],"sources":["C:/Users/jborn/Documents/GitHub/NFT-pixelVizslas/candy-machine-ui/src/Home.tsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport * as anchor from \"@project-serum/anchor\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Container, Snackbar } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  Commitment,\r\n  Connection,\r\n  PublicKey,\r\n  Transaction,\r\n} from \"@solana/web3.js\";\r\nimport { useWallet } from \"@solana/wallet-adapter-react\";\r\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\r\nimport {\r\n  awaitTransactionSignatureConfirmation,\r\n  CANDY_MACHINE_PROGRAM,\r\n  CandyMachineAccount,\r\n  createAccountsForMint,\r\n  getCandyMachineState,\r\n  getCollectionPDA,\r\n  mintOneToken,\r\n  SetupState,\r\n} from \"./candy-machine\";\r\nimport { AlertState, formatNumber, getAtaForMint, toDate } from \"./utils\";\r\nimport { MintCountdown } from \"./MintCountdown\";\r\nimport { MintButton } from \"./MintButton\";\r\nimport { GatewayProvider } from \"@civic/solana-gateway-react\";\r\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\r\n\r\nconst ConnectButton = styled(WalletDialogButton)`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-top: 10px;\r\n  margin-bottom: 5px;\r\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst MintContainer = styled.div``; // add your owns styles here\r\n\r\nexport interface HomeProps {\r\n  candyMachineId?: anchor.web3.PublicKey;\r\n  connection: anchor.web3.Connection;\r\n  txTimeout: number;\r\n  rpcHost: string;\r\n  network: WalletAdapterNetwork;\r\n  error?: string;\r\n}\r\n\r\nconst Home = (props: HomeProps) => {\r\n  const [isUserMinting, setIsUserMinting] = useState(false);\r\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\r\n  const [alertState, setAlertState] = useState<AlertState>({\r\n    open: false,\r\n    message: \"\",\r\n    severity: undefined,\r\n  });\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [endDate, setEndDate] = useState<Date>();\r\n  const [itemsRemaining, setItemsRemaining] = useState<number>();\r\n  const [isWhitelistUser, setIsWhitelistUser] = useState(false);\r\n  const [isPresale, setIsPresale] = useState(false);\r\n  const [isValidBalance, setIsValidBalance] = useState(false);\r\n  const [discountPrice, setDiscountPrice] = useState<anchor.BN>();\r\n  const [needTxnSplit, setNeedTxnSplit] = useState(true);\r\n  const [setupTxn, setSetupTxn] = useState<SetupState>();\r\n\r\n  const rpcUrl = props.rpcHost;\r\n  const wallet = useWallet();\r\n  const cluster = props.network;\r\n  const anchorWallet = useMemo(() => {\r\n    if (\r\n      !wallet ||\r\n      !wallet.publicKey ||\r\n      !wallet.signAllTransactions ||\r\n      !wallet.signTransaction\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    return {\r\n      publicKey: wallet.publicKey,\r\n      signAllTransactions: wallet.signAllTransactions,\r\n      signTransaction: wallet.signTransaction,\r\n    } as anchor.Wallet;\r\n  }, [wallet]);\r\n\r\n  const refreshCandyMachineState = useCallback(\r\n    async (commitment: Commitment = \"confirmed\") => {\r\n      if (!anchorWallet) {\r\n        return;\r\n      }\r\n      if (props.error !== undefined) {\r\n        setAlertState({\r\n          open: true,\r\n          message: props.error,\r\n          severity: \"error\",\r\n          hideDuration: null,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const connection = new Connection(props.rpcHost, commitment);\r\n\r\n      if (props.candyMachineId) {\r\n        try {\r\n          const cndy = await getCandyMachineState(\r\n            anchorWallet,\r\n            props.candyMachineId,\r\n            connection\r\n          );\r\n          console.log(\"Candy machine state: \", cndy);\r\n          let active = cndy?.state.goLiveDate\r\n            ? cndy?.state.goLiveDate.toNumber() < new Date().getTime() / 1000\r\n            : false;\r\n          let presale = false;\r\n\r\n          // duplication of state to make sure we have the right values!\r\n          let isWLUser = false;\r\n          let userPrice = cndy.state.price;\r\n\r\n          // whitelist mint?\r\n          if (cndy?.state.whitelistMintSettings) {\r\n            // is it a presale mint?\r\n            if (\r\n              cndy.state.whitelistMintSettings.presale &&\r\n              (!cndy.state.goLiveDate ||\r\n                cndy.state.goLiveDate.toNumber() > new Date().getTime() / 1000)\r\n            ) {\r\n              presale = true;\r\n            }\r\n            // is there a discount?\r\n            if (cndy.state.whitelistMintSettings.discountPrice) {\r\n              setDiscountPrice(cndy.state.whitelistMintSettings.discountPrice);\r\n              userPrice = cndy.state.whitelistMintSettings.discountPrice;\r\n            } else {\r\n              setDiscountPrice(undefined);\r\n              // when presale=false and discountPrice=null, mint is restricted\r\n              // to whitelist users only\r\n              if (!cndy.state.whitelistMintSettings.presale) {\r\n                cndy.state.isWhitelistOnly = true;\r\n              }\r\n            }\r\n            // retrieves the whitelist token\r\n            const mint = new anchor.web3.PublicKey(\r\n              cndy.state.whitelistMintSettings.mint\r\n            );\r\n            const token = (\r\n              await getAtaForMint(mint, anchorWallet.publicKey)\r\n            )[0];\r\n\r\n            try {\r\n              const balance = await connection.getTokenAccountBalance(token);\r\n              isWLUser = parseInt(balance.value.amount) > 0;\r\n              // only whitelist the user if the balance > 0\r\n              setIsWhitelistUser(isWLUser);\r\n\r\n              if (cndy.state.isWhitelistOnly) {\r\n                active = isWLUser && (presale || active);\r\n              }\r\n            } catch (e) {\r\n              setIsWhitelistUser(false);\r\n              // no whitelist user, no mint\r\n              if (cndy.state.isWhitelistOnly) {\r\n                active = false;\r\n              }\r\n              console.log(\r\n                \"There was a problem fetching whitelist token balance\"\r\n              );\r\n              console.log(e);\r\n            }\r\n          }\r\n          userPrice = isWLUser ? userPrice : cndy.state.price;\r\n\r\n          if (cndy?.state.tokenMint) {\r\n            // retrieves the SPL token\r\n            const mint = new anchor.web3.PublicKey(cndy.state.tokenMint);\r\n            const token = (\r\n              await getAtaForMint(mint, anchorWallet.publicKey)\r\n            )[0];\r\n            try {\r\n              const balance = await connection.getTokenAccountBalance(token);\r\n\r\n              const valid = new anchor.BN(balance.value.amount).gte(userPrice);\r\n\r\n              // only allow user to mint if token balance >  the user if the balance > 0\r\n              setIsValidBalance(valid);\r\n              active = active && valid;\r\n            } catch (e) {\r\n              setIsValidBalance(false);\r\n              active = false;\r\n              // no whitelist user, no mint\r\n              console.log(\"There was a problem fetching SPL token balance\");\r\n              console.log(e);\r\n            }\r\n          } else {\r\n            const balance = new anchor.BN(\r\n              await connection.getBalance(anchorWallet.publicKey)\r\n            );\r\n            const valid = balance.gte(userPrice);\r\n            setIsValidBalance(valid);\r\n            active = active && valid;\r\n          }\r\n\r\n          // datetime to stop the mint?\r\n          if (cndy?.state.endSettings?.endSettingType.date) {\r\n            setEndDate(toDate(cndy.state.endSettings.number));\r\n            if (\r\n              cndy.state.endSettings.number.toNumber() <\r\n              new Date().getTime() / 1000\r\n            ) {\r\n              active = false;\r\n            }\r\n          }\r\n          // amount to stop the mint?\r\n          if (cndy?.state.endSettings?.endSettingType.amount) {\r\n            const limit = Math.min(\r\n              cndy.state.endSettings.number.toNumber(),\r\n              cndy.state.itemsAvailable\r\n            );\r\n            if (cndy.state.itemsRedeemed < limit) {\r\n              setItemsRemaining(limit - cndy.state.itemsRedeemed);\r\n            } else {\r\n              setItemsRemaining(0);\r\n              cndy.state.isSoldOut = true;\r\n            }\r\n          } else {\r\n            setItemsRemaining(cndy.state.itemsRemaining);\r\n          }\r\n\r\n          if (cndy.state.isSoldOut) {\r\n            active = false;\r\n          }\r\n\r\n          const [collectionPDA] = await getCollectionPDA(props.candyMachineId);\r\n          const collectionPDAAccount = await connection.getAccountInfo(\r\n            collectionPDA\r\n          );\r\n\r\n          setIsActive((cndy.state.isActive = active));\r\n          setIsPresale((cndy.state.isPresale = presale));\r\n          setCandyMachine(cndy);\r\n\r\n          const txnEstimate =\r\n            892 +\r\n            (!!collectionPDAAccount && cndy.state.retainAuthority ? 182 : 0) +\r\n            (cndy.state.tokenMint ? 66 : 0) +\r\n            (cndy.state.whitelistMintSettings ? 34 : 0) +\r\n            (cndy.state.whitelistMintSettings?.mode?.burnEveryTime ? 34 : 0) +\r\n            (cndy.state.gatekeeper ? 33 : 0) +\r\n            (cndy.state.gatekeeper?.expireOnUse ? 66 : 0);\r\n\r\n          setNeedTxnSplit(txnEstimate > 1230);\r\n        } catch (e) {\r\n          if (e instanceof Error) {\r\n            if (\r\n              e.message === `Account does not exist ${props.candyMachineId}`\r\n            ) {\r\n              setAlertState({\r\n                open: true,\r\n                message: `Couldn't fetch candy machine state from candy machine with address: ${props.candyMachineId}, using rpc: ${props.rpcHost}! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!`,\r\n                severity: \"error\",\r\n                hideDuration: null,\r\n              });\r\n            } else if (\r\n              e.message.startsWith(\"failed to get info about account\")\r\n            ) {\r\n              setAlertState({\r\n                open: true,\r\n                message: `Couldn't fetch candy machine state with rpc: ${props.rpcHost}! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!`,\r\n                severity: \"error\",\r\n                hideDuration: null,\r\n              });\r\n            }\r\n          } else {\r\n            setAlertState({\r\n              open: true,\r\n              message: `${e}`,\r\n              severity: \"error\",\r\n              hideDuration: null,\r\n            });\r\n          }\r\n          console.log(e);\r\n        }\r\n      } else {\r\n        setAlertState({\r\n          open: true,\r\n          message: `Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!`,\r\n          severity: \"error\",\r\n          hideDuration: null,\r\n        });\r\n      }\r\n    },\r\n    [anchorWallet, props.candyMachineId, props.error, props.rpcHost]\r\n  );\r\n\r\n  const onMint = async (\r\n    beforeTransactions: Transaction[] = [],\r\n    afterTransactions: Transaction[] = []\r\n  ) => {\r\n    try {\r\n      setIsUserMinting(true);\r\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\r\n        let setupMint: SetupState | undefined;\r\n        if (needTxnSplit && setupTxn === undefined) {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Please sign account setup transaction\",\r\n            severity: \"info\",\r\n          });\r\n          setupMint = await createAccountsForMint(\r\n            candyMachine,\r\n            wallet.publicKey\r\n          );\r\n          let status: any = { err: true };\r\n          if (setupMint.transaction) {\r\n            status = await awaitTransactionSignatureConfirmation(\r\n              setupMint.transaction,\r\n              props.txTimeout,\r\n              props.connection,\r\n              true\r\n            );\r\n          }\r\n          if (status && !status.err) {\r\n            setSetupTxn(setupMint);\r\n            setAlertState({\r\n              open: true,\r\n              message:\r\n                \"Setup transaction succeeded! Please sign minting transaction\",\r\n              severity: \"info\",\r\n            });\r\n          } else {\r\n            setAlertState({\r\n              open: true,\r\n              message: \"Mint failed! Please try again!\",\r\n              severity: \"error\",\r\n            });\r\n            setIsUserMinting(false);\r\n            return;\r\n          }\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Please sign minting transaction\",\r\n            severity: \"info\",\r\n          });\r\n        }\r\n\r\n        const mintResult = await mintOneToken(\r\n          candyMachine,\r\n          wallet.publicKey,\r\n          beforeTransactions,\r\n          afterTransactions,\r\n          setupMint ?? setupTxn\r\n        );\r\n\r\n        let status: any = { err: true };\r\n        let metadataStatus = null;\r\n        if (mintResult) {\r\n          status = await awaitTransactionSignatureConfirmation(\r\n            mintResult.mintTxId,\r\n            props.txTimeout,\r\n            props.connection,\r\n            true\r\n          );\r\n\r\n          metadataStatus =\r\n            await candyMachine.program.provider.connection.getAccountInfo(\r\n              mintResult.metadataKey,\r\n              \"processed\"\r\n            );\r\n          console.log(\"Metadata status: \", !!metadataStatus);\r\n        }\r\n\r\n        if (status && !status.err && metadataStatus) {\r\n          // manual update since the refresh might not detect\r\n          // the change immediately\r\n          const remaining = itemsRemaining! - 1;\r\n          setItemsRemaining(remaining);\r\n          setIsActive((candyMachine.state.isActive = remaining > 0));\r\n          candyMachine.state.isSoldOut = remaining === 0;\r\n          setSetupTxn(undefined);\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Congratulations! Mint succeeded!\",\r\n            severity: \"success\",\r\n            hideDuration: 7000,\r\n          });\r\n          refreshCandyMachineState(\"processed\");\r\n        } else if (status && !status.err) {\r\n          setAlertState({\r\n            open: true,\r\n            message:\r\n              \"Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.\",\r\n            severity: \"error\",\r\n            hideDuration: 8000,\r\n          });\r\n          refreshCandyMachineState();\r\n        } else {\r\n          setAlertState({\r\n            open: true,\r\n            message: \"Mint failed! Please try again!\",\r\n            severity: \"error\",\r\n          });\r\n          refreshCandyMachineState();\r\n        }\r\n      }\r\n    } catch (error: any) {\r\n      let message = error.msg || \"Minting failed! Please try again!\";\r\n      if (!error.msg) {\r\n        if (!error.message) {\r\n          message = \"Transaction timeout! Please try again.\";\r\n        } else if (error.message.indexOf(\"0x137\")) {\r\n          console.log(error);\r\n          message = `SOLD OUT!`;\r\n        } else if (error.message.indexOf(\"0x135\")) {\r\n          message = `Insufficient funds to mint. Please fund your wallet.`;\r\n        }\r\n      } else {\r\n        if (error.code === 311) {\r\n          console.log(error);\r\n          message = `SOLD OUT!`;\r\n          window.location.reload();\r\n        } else if (error.code === 312) {\r\n          message = `Minting period hasn't started yet.`;\r\n        }\r\n      }\r\n\r\n      setAlertState({\r\n        open: true,\r\n        message,\r\n        severity: \"error\",\r\n      });\r\n      // updates the candy machine state to reflect the latest\r\n      // information on chain\r\n      refreshCandyMachineState();\r\n    } finally {\r\n      setIsUserMinting(false);\r\n    }\r\n  };\r\n\r\n  const toggleMintButton = () => {\r\n    let active = !isActive || isPresale;\r\n\r\n    if (active) {\r\n      if (candyMachine!.state.isWhitelistOnly && !isWhitelistUser) {\r\n        active = false;\r\n      }\r\n      if (endDate && Date.now() >= endDate.getTime()) {\r\n        active = false;\r\n      }\r\n    }\r\n\r\n    if (\r\n      isPresale &&\r\n      candyMachine!.state.goLiveDate &&\r\n      candyMachine!.state.goLiveDate.toNumber() <= new Date().getTime() / 1000\r\n    ) {\r\n      setIsPresale((candyMachine!.state.isPresale = false));\r\n    }\r\n\r\n    setIsActive((candyMachine!.state.isActive = active));\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshCandyMachineState();\r\n  }, [\r\n    anchorWallet,\r\n    props.candyMachineId,\r\n    props.connection,\r\n    refreshCandyMachineState,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    (function loop() {\r\n      setTimeout(() => {\r\n        refreshCandyMachineState();\r\n        loop();\r\n      }, 20000);\r\n    })();\r\n  }, [refreshCandyMachineState]);\r\n\r\n  return (\r\n    <Container style={{ marginTop: 100 }}>\r\n      <Container maxWidth=\"xs\" style={{ position: \"relative\" }}>\r\n        <Paper\r\n          style={{\r\n            padding: 24,\r\n            paddingBottom: 10,\r\n            backgroundColor: \"#151A1F\",\r\n            borderRadius: 6,\r\n          }}\r\n        >\r\n          {!wallet.connected ? (\r\n            <ConnectButton>Connect Wallet</ConnectButton>\r\n          ) : (\r\n            <>\r\n              {candyMachine && (\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"center\"\r\n                  wrap=\"nowrap\"\r\n                >\r\n                  <Grid item xs={3}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      Remaining\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      color=\"textPrimary\"\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {`${itemsRemaining}`}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      {isWhitelistUser && discountPrice\r\n                        ? \"Discount Price\"\r\n                        : \"Price\"}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      color=\"textPrimary\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      {isWhitelistUser && discountPrice\r\n                        ? `◎ ${formatNumber.asNumber(discountPrice)}`\r\n                        : `◎ ${formatNumber.asNumber(\r\n                            candyMachine.state.price\r\n                          )}`}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={5}>\r\n                    {isActive && endDate && Date.now() < endDate.getTime() ? (\r\n                      <>\r\n                        <MintCountdown\r\n                          key=\"endSettings\"\r\n                          date={getCountdownDate(candyMachine)}\r\n                          style={{ justifyContent: \"flex-end\" }}\r\n                          status=\"COMPLETED\"\r\n                          onComplete={toggleMintButton}\r\n                        />\r\n                        <Typography\r\n                          variant=\"caption\"\r\n                          align=\"center\"\r\n                          display=\"block\"\r\n                          style={{ fontWeight: \"bold\" }}\r\n                        >\r\n                          TO END OF MINT\r\n                        </Typography>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <MintCountdown\r\n                          key=\"goLive\"\r\n                          date={getCountdownDate(candyMachine)}\r\n                          style={{ justifyContent: \"flex-end\" }}\r\n                          status={\r\n                            candyMachine?.state?.isSoldOut ||\r\n                            (endDate && Date.now() > endDate.getTime())\r\n                              ? \"COMPLETED\"\r\n                              : isPresale\r\n                              ? \"PRESALE\"\r\n                              : \"LIVE\"\r\n                          }\r\n                          onComplete={toggleMintButton}\r\n                        />\r\n                        {isPresale &&\r\n                          candyMachine.state.goLiveDate &&\r\n                          candyMachine.state.goLiveDate.toNumber() >\r\n                            new Date().getTime() / 1000 && (\r\n                            <Typography\r\n                              variant=\"caption\"\r\n                              align=\"center\"\r\n                              display=\"block\"\r\n                              style={{ fontWeight: \"bold\" }}\r\n                            >\r\n                              UNTIL PUBLIC MINT\r\n                            </Typography>\r\n                          )}\r\n                      </>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n              <MintContainer>\r\n                {candyMachine?.state.isActive &&\r\n                candyMachine?.state.gatekeeper &&\r\n                wallet.publicKey &&\r\n                wallet.signTransaction ? (\r\n                  <GatewayProvider\r\n                    wallet={{\r\n                      publicKey:\r\n                        wallet.publicKey ||\r\n                        new PublicKey(CANDY_MACHINE_PROGRAM),\r\n                      //@ts-ignore\r\n                      signTransaction: wallet.signTransaction,\r\n                    }}\r\n                    gatekeeperNetwork={\r\n                      candyMachine?.state?.gatekeeper?.gatekeeperNetwork\r\n                    }\r\n                    clusterUrl={rpcUrl}\r\n                    cluster={cluster}\r\n                    options={{ autoShowModal: false }}\r\n                  >\r\n                    <MintButton\r\n                      candyMachine={candyMachine}\r\n                      isMinting={isUserMinting}\r\n                      setIsMinting={(val) => setIsUserMinting(val)}\r\n                      onMint={onMint}\r\n                      isActive={\r\n                        isActive ||\r\n                        (isPresale && isWhitelistUser && isValidBalance)\r\n                      }\r\n                    />\r\n                  </GatewayProvider>\r\n                ) : (\r\n                  <MintButton\r\n                    candyMachine={candyMachine}\r\n                    isMinting={isUserMinting}\r\n                    setIsMinting={(val) => setIsUserMinting(val)}\r\n                    onMint={onMint}\r\n                    isActive={\r\n                      isActive ||\r\n                      (isPresale && isWhitelistUser && isValidBalance)\r\n                    }\r\n                  />\r\n                )}\r\n              </MintContainer>\r\n            </>\r\n          )}\r\n          <Typography\r\n            variant=\"caption\"\r\n            align=\"center\"\r\n            display=\"block\"\r\n            style={{ marginTop: 7, color: \"grey\" }}\r\n          >\r\n            Powered by METAPLEX\r\n          </Typography>\r\n        </Paper>\r\n      </Container>\r\n\r\n      <Snackbar\r\n        open={alertState.open}\r\n        autoHideDuration={\r\n          alertState.hideDuration === undefined ? 6000 : alertState.hideDuration\r\n        }\r\n        onClose={() => setAlertState({ ...alertState, open: false })}\r\n      >\r\n        <Alert\r\n          onClose={() => setAlertState({ ...alertState, open: false })}\r\n          severity={alertState.severity}\r\n        >\r\n          {alertState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst getCountdownDate = (\r\n  candyMachine: CandyMachineAccount\r\n): Date | undefined => {\r\n  if (\r\n    candyMachine.state.isActive &&\r\n    candyMachine.state.endSettings?.endSettingType.date\r\n  ) {\r\n    return toDate(candyMachine.state.endSettings.number);\r\n  }\r\n\r\n  return toDate(\r\n    candyMachine.state.goLiveDate\r\n      ? candyMachine.state.goLiveDate\r\n      : candyMachine.state.isPresale\r\n      ? new anchor.BN(new Date().getTime() / 1000)\r\n      : undefined\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}